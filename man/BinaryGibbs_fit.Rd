% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Binary_Gibbs_Functions.R
\name{BinaryGibbs_fit}
\alias{BinaryGibbs_fit}
\title{Fitting Bayesian Probit Model.}
\usage{
BinaryGibbs_fit(Train_X, Train_Y, nIter, prior, burn_in, prior_mean,
  prior_var)
}
\arguments{
\item{Train_X}{n X p matrix of continuous covarites of training set.}

\item{Train_Y}{n X 1 vector of responses of training set. (takes values 0 or 1).}

\item{nIter}{An  integer, No of iterations for the Gibbs Sampler.}

\item{prior}{choice of prior (1: diffuse prior,2: proper conjugate prior).}

\item{burn_in}{An integer, No of iterations neglected at begining of the chain in calculation of posterior mean.}

\item{prior_mean}{a (p+1) X 1 vector specifying mean of the normal conjugate prior, if prior = 2.}

\item{prior_var}{a (p+1) X (p+1) matrix specifying variance of the normal conjugate prior, if prior = 2.}
}
\value{
\code{beta_matrix} a nIter X (p+1) matrix of beta estimate chains.

\code{estimates} a (p+1) X 1 vector of beta estimates.

\code{Train_Accuracy} a nIter X 1 vector of accuracy
}
\description{
\code{BinaryGibbs_fit} does Implementation of Probit Regression for Binary Responses via data augmentation and Gibbs sampling.
}
\examples{
set.seed(250)
require(truncnorm)
require(MASS)
N <- 500
x1 <- seq(-1, 1, length.out = N)
x2 <- rnorm(N, 0, 1)
D <- 3
X <- matrix(c(rep(1, N), x1, x2), ncol = D)
true_theta <- c(- 0.5, 3.3, 2)
p <- pnorm(X \%*\% true_theta)
y <- rbinom(N, 1, p)
N1  <- sum(y)  # Number of successes
N0  <- N - N1  # Number of failures
#Spliting The Data in Train and Test in 80:20 ratio
Train_ID = sample(1:nrow(X), round(nrow(X) * 0.8), replace = FALSE) # Train Data IDS
Train_X = X[Train_ID, -1] # Train Data Covariates
Test_X = X[-Train_ID, -1] # Test Data Covarites
Train_Y = y[Train_ID] # Train Data Response
Test_Y = y[-Train_ID] # Test Data Response
nIter = 10000
burn_in = round(nIter * 0.5)
prior = 2
prior_mean = rep(1, 3)
prior_var = diag(10, 3)
BinaryGibbs_fit(Train_X, Train_Y, nIter, prior, burn_in, prior_mean, prior_var )

}
